#/usr/bin/env sh

# termux-proot - A sandboxed, 2nd termux, isolated or jailed termux environment with proot
# https://git.io/termux-proot

[ -z $TERMUX_SANDBOX_PATH ] && export TERMUX_SANDBOX_PATH=$PREFIX/../../sandbox
! [ $proot=$(command -v proot) ] && pkg install proot -yq
! [ $curl=$(command -v curl) ] && pkg install curl -yq

# { Installation }
[ $(uname -o) != "Android" ] && exec echo "Sorry. This script is only executeable on Android. Use Termux to exexute this or use termux-docker."
! [ -d $TERMUX_SANDBOX_PATH ] && mkdir $TERMUX_SANDBOX_PATH && cd $TERMUX_SANDBOX_PATH && {
	! [ -f ${HOME:-~/}/.termux-rootfs.zip ] && echo "[#  ] Downloading Latest Termux Bootstrap...." && curl -#Lo ${HOME:-~/}/.termux-rootfs.zip https://github.com/termux/termux-packages/releases/download/$(curl -s "https://api.github.com/repos/termux/termux-packages/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')/bootstrap-$(dpkg --print-architecture).zip

	echo -n "[## ] Extracting.... "
	unzip -q ${HOME:-~/}/.termux-rootfs.zip

	[ $? != 0 ] && exit 6
	echo Done

	echo -n "[###] Symlinking.... "
	while read p; do
		ln -s ${p/‚Üê/ }
	done <SYMLINKS.txt && rm SYMLINKS.txt
	echo Done

	echo -e "\n\nIn first startup, You may face a warning like this:\n\n  proot warning: can't chdir("/data/data/com.termux/files/home/.") in the guest rootfs: No such file or directory\n\nJust ignore the warning. It will gone after the next launch.\n\n"
}

ARGS=proot
ARGS="$ARGS -r $TERMUX_SANDBOX_PATH"

# Make sure that var/cache directory is there.
# If it's not there, recreate directory
for dir in $TERMUX_SANDBOX_PATH/var/cache $TERMUX_SANDBOX_PATH/home; do
	! [ -d $dir ] && mkdir $dir
done

# Bind some common path
for bind in /dev /proc /sys /system /vendor /apex /linkerconfig/ld.config.txt /property_context $TERMUX_SANDBOX_PATH:/data/data/com.termux/files/usr $TERMUX_SANDBOX_PATH/var/cache:/data/data/com.termux/cache; do
	[ -d $bind ] || [ -f $bind ] || echo $bind | grep com.termux > /dev/null && ARGS="$ARGS -b $bind"
done

ARGS="$ARGS -w /data/data/com.termux/files/home"

cmd="$@"

[ -z "$cmd" ] && exec $ARGS /bin/login
! [ -z "$cmd" ] && exec $ARGS /bin/login -c "$cmd"
